@model Models.Order.SalesOrderHeaderModel

@{
    ViewData["Title"] = "Sales Order Details";
}

<div class="container my-4">
    <div class="row mb-4">
        <div class="col">
            <h1 class="text-primary">Sales Order Details</h1>
        </div>
        <div class="col text-end">
            <a asp-action="Edit" asp-route-id="@Model.SalesOrderId" class="btn btn-warning">
                <i class="bi bi-pencil"></i> Edit
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <h4 class="text-secondary">Order Information</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Sales Order ID</th>
                        <td>@Model.SalesOrderId</td>
                    </tr>
                    <tr>
                        <th>Revision Number</th>
                        <td>@Model.RevisionNumber</td>
                    </tr>
                    <tr>
                        <th>Order Date</th>
                        <td>@Model.OrderDate.ToString("yyyy-MM-dd")</td>
                    </tr>
                    <tr>
                        <th>Due Date</th>
                        <td>@Model.DueDate.ToString("yyyy-MM-dd")</td>
                    </tr>
                    <tr>
                        <th>Ship Date</th>
                        <td>@Model.ShipDate?.ToString("yyyy-MM-dd") ?? "Not Shipped"</td>
                    </tr>
                    <tr>
                        <th>Status</th>
                        <td>
                            @{
                                switch (Model.Status)
                                {
                                    case 1:
                                        <text>In Progress</text>
                                        ; break;
                                    case 2:
                                        <text>Shipped</text>
                                        ; break;
                                    case 3:
                                        <text>Cancelled</text>
                                        ; break;
                                    default:
                                        <text>Unknown</text>
                                        ; break;
                                }
                            }
                        </td>
                    </tr>
                    <tr>
                        <th>Online Order</th>
                        <td>@(Model.OnlineOrderFlag ? "Yes" : "No")</td>
                    </tr>
                    <tr>
                        <th>Purchase Order Number</th>
                        <td>@Model.PurchaseOrderNumber </td>
                    </tr>
                    <tr>
                        <th>Account Number</th>
                        <td>@Model.AccountNumber</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="col-md-6">
            <h4 class="text-secondary">Customer & Address</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Customer ID</th>
                        <td>@Model.CustomerId</td>
                    </tr>
                    <tr>
                        <th>Bill To Address ID</th>
                        <td>@Model.BillToAddressId</td>
                    </tr>
                    <tr>
                        <th>Ship To Address ID</th>
                        <td>@Model.ShipToAddressId</td>
                    </tr>
                    <tr>
                        <th>Ship Method ID</th>
                        <td>@Model.ShipMethodId</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="text-secondary">Financial Details</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Sub Total</th>
                        <td>@Model.SubTotal.ToString("C")</td>
                    </tr>
                    <tr>
                        <th>Tax Amount</th>
                        <td>@Model.TaxAmt.ToString("C")</td>
                    </tr>
                    <tr>
                        <th>Freight</th>
                        <td>@Model.Freight.ToString("C")</td>
                    </tr>
                    <tr>
                        <th>Total Due</th>
                        <td class="fw-bold">@((Model.SubTotal + Model.TaxAmt + Model.Freight).ToString("C"))</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Comment))
    {
        <div class="row">
            <div class="col-md-12">
                <h4 class="text-secondary">Comments</h4>
                <p>@Model.Comment</p>
            </div>
        </div>
    }
</div>



<div class="container">
    <h1 class="my-4">Sales Order Details</h1>

    <!-- Display Success and Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <!-- Create New Button -->
    <div class="mb-3">
        <a href="@Url.Action("CreateDetail", "SalesOrderHeader",new { OrderHeaderId = Model.SalesOrderId })" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Sales Order Detail
        </a>
    </div>

    <!-- Sales Order Details Table -->
    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <th>Detail ID</th>
                <th>Order ID</th>
                <th>Carrier Tracking Number</th>
                <th>Order Quantity</th>
                <th>Product ID</th>
                <th>Special Offer ID</th>
                <th>Unit Price</th>
                <th>Discount</th>
                <th>Line Total</th>
                <th>Modified Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (@Model.SalesOrderDetails != null && @Model.SalesOrderDetails.Any())
            {
                foreach (var detail in @Model.SalesOrderDetails)
                {
                    <tr>
                        <td>@detail.SalesOrderDetailId</td>
                        <td>@detail.SalesOrderId</td>
                        <td>@detail.CarrierTrackingNumber</td>
                        <td>@detail.OrderQty</td>
                        <td>@detail.ProductId</td>
                        <td>@detail.SpecialOfferId</td>
                        <td>@detail.UnitPrice.ToString("C")</td>
                        <td>@detail.UnitPriceDiscount.ToString("C")</td>
                        <td>@detail.LineTotal.ToString("C")</td>
                        <td>@detail.ModifiedDate.ToString("yyyy-MM-dd")</td>
                        <td>
                            <!-- Edit Button -->
                            <a href="@Url.Action("EditDetail", "SalesOrderHeader", new { id = detail.SalesOrderDetailId })" class="btn btn-warning btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>

                            <!-- Delete Button -->
                            <button type="button" class="btn btn-danger btn-sm"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal"
                                    data-detail-id="@detail.SalesOrderDetailId">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="11" class="text-center text-muted">No sales order details available</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this sales order detail?
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteDetail" asp-controller="SalesOrderHeader" method="post">
                    <input type="hidden" id="detailToDeleteId" name="orderId" value="" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget; // Button that triggered the modal
        var detailId = button.getAttribute('data-detail-id'); // Extract Detail ID

        // Set the hidden input value for the form
        document.getElementById('detailToDeleteId').value = detailId;
    });
</script>

