@model Models.Shared.PaginatedResult<Models.Order.SalesOrderHeaderModel>

@{
    ViewData["Title"] = "Sales Order List";
}

<div class="container">
    <h1 class="my-4">Sales Order List</h1>

    <!-- Display Success and Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <div class="mb-3">
        <a href="@Url.Action("Create", "SalesOrderHeader")" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Sales Order
        </a>
    </div>

    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <th>Order Date</th>
                <th>Due Date</th>
                <th>Customer Name</th>
                <th>Sub Total</th>
                <th>Total Tax</th>
                <th>Freight</th>
                <th>Total Due</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items != null && Model.Items.Any())
            {
                foreach (var order in Model.Items)
                {
                    <tr>
                        <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                        <td>@order.DueDate.ToString("yyyy-MM-dd")</td>
                        <td>@order.CustomerName</td>
                        <td>@order.SubTotal.ToString("C")</td>
                        <td>@order.TaxAmt.ToString("C")</td>
                        <td>@order.Freight.ToString("C")</td>
                        <td>@(order.SubTotal + order.TaxAmt + order.Freight)</td>
                        <td>
                            <a href="@Url.Action("Details", "SalesOrderHeader", new { id = order.SalesOrderId })" class="btn btn-info btn-sm">
                                <i class="bi bi-eye"></i> View
                            </a>
                            <a href="@Url.Action("Edit", "SalesOrderHeader", new { id = order.SalesOrderId })" class="btn btn-warning btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <!-- Delete Button -->
                            <button type="button" class="btn btn-danger btn-sm"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal"
                                    data-order-id="@order.SalesOrderId"
                                    data-order-customer="@order.CustomerName">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center text-muted">No sales orders available</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    <nav>
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1 })"> &lt;&lt;  </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })"> &lt;  </a>
                </li>

            }
            @if (Model.CurrentPage < Model.TotalRecords / Model.PageSize)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">></a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page =Model.TotalRecords/Model.PageSize })">>></a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the sales order for <strong id="modalSaleOrder"></strong>?
            </div>
            <!-- Modal Footer -->
            <div class="modal-footer">
                <form asp-action="Delete" asp-controller="SalesOrderHeader" method="post">
                    <input type="hidden" id="orderToDeleteId" name="orderId" value="" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget; // Button that triggered the modal
        var orderId = button.getAttribute('data-order-id'); // Extract Order ID
        var orderCustomer = button.getAttribute('data-order-customer'); // Extract Customer Name

        // Update modal content
        document.getElementById('modalSaleOrder').textContent = orderCustomer; // Display customer name
        document.getElementById('orderToDeleteId').value = orderId; // Set hidden input value
    });
</script>
